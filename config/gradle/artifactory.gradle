// This include file applies our Artifactory related settings to places that need them (root project + modules)
// It is a superset of the the stuff common to Java sub projects so we include the common.gradle here
apply from: "$rootDir/config/gradle/common.gradle"

// Artifactory publishing requires these (without maven we'd get no .pom with dependency info published)
apply plugin: 'maven'
apply plugin: 'maven-publish'

// The following helps configure artifacts for each sub-project that applies this file
// A configuration for publishing artifacts
//configurations {
//    published
//}
//
//// Define the artifacts we want to publish (the .pom will also be included since the Maven plugin is active)
//artifacts {
//    published jar
//    published sourceJar
//    published javadocJar
//}

publishing {
    publications {
        "$project.name"(MavenPublication) {
            // Without this we get a .pom with no dependencies
            from components.java

            artifact source: sourceJar, classifier: 'sources'
            artifact source: javadocJar, classifier: 'javadoc'

            repositories {
                maven {
                    name = 'MovingBlocks'

                    if (rootProject.hasProperty("artifactoryPublishRepo")) {
                        url = "http://artifactory.terasology.org/artifactory/$artifactoryPublishRepo"
                        println "Changing PUBLISH repoKey to $artifactoryPublishRepo"
                    } else {
                        url = 'http://artifactory.terasology.org/artifactory/terasology-snapshot-local'
                        println "PUBLISH repoKey is terasology-snapshot-local (default value)"
                    }

                    credentials {
                        if (rootProject.hasProperty("artifactoryUser") && rootProject.hasProperty("artifactoryPass")) {
                            username = "$artifactoryUser"
                            password = "$artifactoryPass"
                        }
                    }
                    authentication {
                        basic(BasicAuthentication)
                    }
                }
            }
        }
    }
}

